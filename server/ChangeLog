2008-02-01  Ravi Shankar <ravehanker@gmail.com>

	* views.py (retrieve_attempt, retrieve_question_set, submit_attempt): Adding Simple key authentication and
	removed keyid from utils.get_question_set_as_xml calls
	* views.py (submit_attempt):  Removed Commmented GPG code
	* utils.py (queue_not_empty): Fixed Comparison bug
	* utils.py (encrypt, decrypt): Removed method and removed corresponding calls in
	other methods
	* utils.py (add_node, dequeue_attempts, get_attempt_as_xml,
	get_question_set_as_xml): Changed method signature to remove keyid 
	* models.py(PGP): removed
	* models.py (EvalKey): Added new model for simple authentication
	* settings.py: set DATABASE_USER and DATABASE_PASSWORD to '' since default
	database is sqlite3

2007-05-16  Ravi Shankar <ravehanker@gmail.com>

	* views.py (activate_account): Added
	* views.py (view_last_n_submissions): Better error checking for sort_by
	values
	* views.py (submit_attempt): Removed Encryption to fix build
	* utils.py (encrypt, decrypt): Removed Encryption to fix build
	* utils.py (get_question_set_as_xml): Changed name for evaluator_path to
	judge_path to fix bug

2007-04-07  Ravi Shankar <ravehanker@gmail.com>

	* models.py: Changed all " to ' in quoting strings
	Added Verbose names to fields where necessary
	* models.py (UserProfile, Language, Attempt): Cleaned up structure with
		1) classes are seperated by 2 lines 
		2) Attributes are grouped and placed first. 
		3) Class header, attributes and functions are seperated by a single	space 
	* models.py (Question, UserProfile, Attempt): Changed Doc strings

	* models.py (UserProfile): Added organization, contact_address and country
	importing hackzor.server.country_choices accordingly
	* models.py (Question): Changed evaluator_path to judge_path
	* models.py (UserProfile.solves): Changed problem to evaluated_attempt
	Fixed Broken code by assuming correctly	that 'problem' (now evaluated_attempt)
	is an instance of Attempt, rather than question
	* models.py (Attempt.verified): Fixed bug by passing self rather than 
	self.question to self.user.solves
	* models.py (UserProfile.get_total_submission_time): Added to build
	* country_choices.py: Added to build

2007-01-16  Ravi Shankar <ravehanker@gmail.com>

	* base.html: Removed link to search
	* forms.py (RegistrationForm): Added code to recycle unactivated but
	expired accounts
	(ChangeDetails): Added
	* models.py (Question): Added submission_limit
	* urls.py: Changed home page to the template home.html
	removed search
	Change view from view_problem to django.views.generic.list_detail.object_detail
	* views.py: Added CONTEST_START_TIME and CONTEST_END_TIME
	(search): removed
	(view_problem): removed displaying test_input
	Added RequestContext to returning objects
	(change_details): Added
	(get_contest_times): Added as Context Processor
	(register, confirm , forgot_password, change_password): Added RequestContext to returning objects
	(change_password): Added code to implement submission_limit and to
	restrict resubmission of accepted problems

2006-12-15  Ravi Shankar <ravehanker@gmail.com>

	* views.py (retrieve_attempt): Added code to Put Timed out object back in
	ToBeEvaluated

2006-12-04  Ravi Shankar <ravehanker@gmail.com>

	* views.py (submit_code): Fixed Breakage due to checking source limit.
	Does not store submit in the model if source limit exceeded
	* views.py (retreive_attempt): Changed name to retrieve_attempt
	* views.py (retreive_question_set): Changed name to retrieve_question_set

	(retreive_attempt): Code now reclaims Attempts that have been
	in BeingEvaluated for time greater than ATTEPMT_TIMEOUT
	Now passes key_id to utils.get_question_set_as_xml

	(search_questions): Changed Name to search
	Added code to searchisers also
	(search_users): deleted as it is now redundant

	(get_pub_key): Added

	* models.py (BeingEvaluated): Added time_of_retrieval 

	* urls.py: changed search_user url to search

2006-12-03  Prashanth Mohan  <prashmohan@gmail.com>

	* models.py (PGP.save): Modified PGP model to correct imports. If
	key already present in keyring, the `unchanged' parameter is
	increased.

	* utils.py (encrypt): Added Encrypt function 
	(add_node): This function automatically encrypts the data and adds
	to XML file
	(get_question_set_as_xml): Uses StringIO module instead of
	files. Better Performance
	(get_val_by_id): Automatically decrypts the data and returns it
	(decrypt): Added Decrypt Function

	* views.py (submit_attempt): Added Support for verifying evaluator
	source

2006-12-03  Ravi Shankar <ravehanker@gmail.com>

	* models.py (PGP.save): Added

2006-12-02  Ravi Shankar <ravehanker@gmail.com>

	* views.py(viewProblem): Changed name to view_problem 

	(view_last_n_submissions): Added
	(search_users): Added

	(register, confirm, forgot_password, change_password,submit_code, 
	search_questions): Added request.user as parameter to render_to_response

	(submit_code): Added Source Limit Checking

	(submit_attempt, retrieve_question_set, retrive_attempt): Added key_id as
	parameter

	* models.py(Attempt): Added field error_status
	(PGP): Added Class

	* utils.py(deconver_xmlised_attempt_result): Added error_status field
	support

	* urls.py(urlpatterns): Added url for last n submits
	Added key_id parameter to retrive_attempt, submit_attempt and
	retrieve_question_set

2006-11-29  Ravi Shankar <ravehanker@gmail.com>

	* views.py(viewProblem): deleted test_output according to model change
	(register): Fixed errors to due to indentation
	(submit_code): Made changes in statement decoration

	(retrive_attempt): Added XML Support. Now raises 404 on empty attempt
	(submit_attempt): Added and added distributed support in subsequesnt
	commit
	(retrieve_question_set): Added 

	* utils.py(convert_attempt_to_xml): Cast values from XML to strings and
	changed return value to doc.toxml()

	(get_question_set_as_xml, get_val_id, deconver_xmlised_attempt_result): Added

	(get_attempt_as_xml): now returns None if queue empty

	* urls.py(urlpatterns): Added urls to display user stats, getattempt,
	submitattempt and question set.

	Changed view_toppers list as descending.

2006-11-19  Ravi Shankar <ravehanker@gmail.com>

	* views.py, forms.py: Added Doc Strings to views

	* views.py (viewProblem): View now throws 404 if parameter id is not a valid
	primry key

	* views.py(forgot_password): Added authentication check

	* models.py (UserProfile): Added solved ManyToManyField 


2006-11-18  Ravi Shankar <ravehanker@gmail.com>

	* models.py(UserProfile): Add a ManyToManyField for Solved Questions

2006-10-24  Ravi Shankar  <ravehanker@gmail.com>

	* views.py(search_questions): changed get method to filter for extracting
	multiple results.
	Added code to search title

2006-10-23  Prashanth Mohan  <prashmohan@gmail.com>

	* models.py (ToBeEvaluated, BeingEvaluated): Changed Pending Model to
	ToBeEvaluated and also added BeingEvaluated Model

	* views.py(search_questions): Added

2006-10-23  Ravi Shankar  <ravehanker@gmail.com>

	* views.py(register): added username to mail content
	(confim): added authentication check.
	changes template output to simple_message where needed
	(forgot_password, change_password): Added
	(search_questions): cleaned up and made it work with builtin queries

	* form.py(ForgotPassword, ChangePassword): Added

	* urls.py(urlpatterns): Added search and top10 urls

2006-10-22  Ravi Shankar  <ravehanker@gmail.com>
	
	* models.py (Prending): Added
	(Attempt): Added time_of_submit, file_name
	* views.py(submit_code): Added code to put new submits in Pending.
	Added code to include file_name

2006-10-21  Ravi Shankar  <ravehanker@gmail.com>

	* views.py (register) : changed rendering from register.html to
	simple_message.html for boundary cases.
	Made changes to mail format
	(confirm) : changed rendering from confirm.html to simple_message.html.
	added code to delete users whose key has expired

	(submit_code): added code to throw 404 when for non-enistent object
	queries.
	Add functionality for correct problem to be selected by default in
	template.
	changed question_name to question_id and added langauge_id
	removed id_question_name  from template parameter list.

	* models.py (Question): added prefix hidden to FileUpload fields
	Added 'score'.

	(Language): Added
	(Attempt): Added ForeignKey reference to Language

	* urls.py(urlpatterns): Added plain submit url

	* forms.py(RegistrationForm): Added selectfield for  language 



2006-10-17  Prashanth Mohan  <prashmohan@gmail.com>

	* views.py (register): Register now sends personalised messages as
	part of registration confirmation (based on contest name specified
	in settings.py file)

2006-10-16  Ravi Shankar  <ravehanker@gmail.com>
	* views.py(viewProblem): Added Login required decorator
	Added user object info to render_to_response dict
	(register): Added authentication check
	(login): removed. Will use django's login view
	(logout_view): Added

	(submit_code): Added Login required decorator
	Fixed Upload-POST problem by adding request.FILES
	Added Code to save all submissions in 'submits' dir with 
	the username_probno	file name format

	* models.py(Attempt.__str__): corrected 'self.user.alias' to
	'self.user.user.username'
	(Attempt.attempt_number): deleted
	(Attempt.code_path): Added

	* urls.py(urlpatterns): deleted admin, registeration, login views - moved to
	'hackzor/urls.py'
	Added Submit Solution view

	* forms.py(SubmitSolution): Added


2006-10-14  Ravi Shankar  <ravehanker@gmail.com>

	* models.py (Question.test_input, Question.test_output,
	Question.evaluator_path): changed relative
	path from 'server/evaluators/X' to 'evaluators/X'

	* views.py(viewProblem): Added path_to_media_prefix and changed values of
	inp and out to point to the correct postions as path of media files have
	been moved
	(submit_code): Added

	* evaluators: Deleted

2006-10-13  Prashanth Mohan  <prashmohan@gmail.com>

	* forms.py (LoginForm): Added a Login form

	* views.py (login): Added some initial login functionality. It is
	NOT complete.

	* urls.py (urlpatterns): Added registration URL pattern

	* views.py (register): Added Registration View. Sends email to
	user to confirm registration
	(confirm): Registration Confirmation view added. Checks if
	confirmation link is accessed within time frame

	* models.py (UserProfile.activation_key): Extends the User
	model. Contains the activation key and expiry date
	(Question): changed testInput to test_input, testOutput to test_output and
	evaluatorPath to evaluator_path

	* forms.py (RegistrationForm): Added a registration form
	(RegistrationForm.isValidUsername): username uniqueness
	(RegistrationForm.isValidEmail): Only 1 id per email id

2006-10-11  Prashanth Mohan  <prashmohan@gmail.com>

	* models.py: Cleaned up some formatting, changed tabs to spaces

	* urls.py (urlpatterns): Moved admin interface rule to main
	hackzor/urls.py

2006-10-04  Ravi Shankar <ravehanker@gmail.com>
	* views.py: Added the viewProblem view
	* urls.py: Made changes to include viewProblem in the place of
	generic view for '^problems/(?P<id>\d+)/$'
	
2006-09-24  Ravi Shankar <ravehanker@gmail.com>

	* models.py: Added doc strings to models
	(Question.testInput, Question.testOutput): Changed from
	FilePathField to FileField with files uploaded to
	'/server/evaluators/testCases' Modified testInput, testOutput and
	evaluatorPath in class Question
	(Question.evaluatorPath): Changed from FilePathField to FileField
	with files uploaded to '/server/evaluators/pyCode'

	* (Attempt.__str__) : Changed from 'self.user.alias' to
	"self.user.alias + ':' + self.question.name"

	* (urls.py): Added to build

2006-09-22  Ravi Shankar <ravehanker@gmail.com>

	* (ChangeLog): Added to build

2006-09-22  Ravi Shankar  <ravehanker@gmail.com>

	* Added Initial Build

